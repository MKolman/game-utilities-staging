{"version":3,"sources":["webpack:///./src/views/Draw.vue?f38c","webpack:///src/views/Draw.vue","webpack:///./src/views/Draw.vue?841f","webpack:///./src/views/Draw.vue","webpack:///./src/views/Draw.vue?2d25"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","staticStyle","_v","on","undoLine","staticRenderFns","name","data","linesDrawn","windowWidth","window","innerWidth","windowHeight","innerHeight","canvas","context","mounted","document","getElementById","width","height","getContext","initializeDraw","methods","clearCanvas","pop","segment","moveTo","beginPath","lineTo","stroke","getPosition","rect","getBoundingClientRect","X","mouseEvent","clientX","left","Y","clientY","top","self","scale","strokeStyle","lineJoin","lineWidth","is_touch_device","documentElement","drawer","isDrawing","touchstart","coors","x","y","push","touchmove","length","touchend","event","targetTouches","pageX","pageY","obj","offsetParent","offsetLeft","offsetTop","type","addEventListener","draw","position","drawLine","closePath","removeEventListener","finishDrawing","clearRect","component"],"mappings":"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","file":"js/chunk-13cf5be0.87113f6c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fullscreen\"},[_c('canvas',{attrs:{\"id\":\"canvas\"}}),_c('md-button',{staticClass:\"md-icon-button md-primary\",staticStyle:{\"top\":\"24px\",\"position\":\"absolute\",\"left\":\"24px\",\"margin-left\":\"0\"},attrs:{\"to\":\"/\"}},[_c('md-icon',{staticClass:\"md-size-2x\"},[_vm._v(\"close\")])],1),_c('md-button',{staticClass:\"md-fab md-fab-bottom-left md-primary\",on:{\"click\":_vm.undoLine}},[_c('md-icon',{},[_vm._v(\"undo\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"fullscreen\">\n    <canvas id=\"canvas\"></canvas>\n    <md-button\n      to=\"/\"\n      class=\"md-icon-button md-primary\"\n      style=\"top: 24px; position: absolute;left: 24px; margin-left: 0;\"\n    >\n      <md-icon class=\"md-size-2x\">close</md-icon>\n    </md-button>\n    <md-button @click=\"undoLine\" class=\"md-fab md-fab-bottom-left md-primary\">\n      <md-icon class=\"\">undo</md-icon>\n    </md-button>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"draw\",\n  data() {\n    return {\n      linesDrawn: [],\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight,\n      canvas: null,\n      context: null\n    };\n  },\n  mounted() {\n    this.canvas = document.getElementById(\"canvas\");\n    this.canvas.width = 2 * window.innerWidth;\n    this.canvas.height = 2 * window.innerHeight;\n    this.context = this.canvas.getContext(\"2d\");\n    this.initializeDraw();\n  },\n  methods: {\n    undoLine: function() {\n      this.clearCanvas(this.canvas, this.context);\n      this.linesDrawn.pop();\n      for (let line = 0; line < this.linesDrawn.length; line++) {\n        for (\n          let segment = 0;\n          segment < this.linesDrawn[line].length;\n          segment++\n        ) {\n          if (segment == 0) {\n            this.context.moveTo(\n              this.linesDrawn[line][segment][0],\n              this.linesDrawn[line][segment][1]\n            );\n            this.context.beginPath();\n          } else {\n            this.context.lineTo(\n              this.linesDrawn[line][segment][0],\n              this.linesDrawn[line][segment][1]\n            );\n          }\n        }\n        this.context.stroke();\n      }\n    },\n\n    // works out the X, Y position of the click inside the canvas from the X, Y position on the page\n    getPosition: function(mouseEvent) {\n      var rect = this.canvas.getBoundingClientRect();\n      return {\n        X: mouseEvent.clientX - rect.left,\n        Y: mouseEvent.clientY - rect.top\n      };\n    },\n\n    initializeDraw: function() {\n      // get references to the canvas element as well as the 2D drawing context\n      let self = this;\n      let canvas = self.canvas;\n      var context = self.context;\n      context.scale(2, 2);\n      context.strokeStyle = \"#444444\";\n      context.lineJoin = \"round\";\n      context.lineWidth = 10;\n\n      // This will be defined on a TOUCH device such as iPad or Android, etc.\n      var is_touch_device = \"ontouchstart\" in document.documentElement;\n\n      if (is_touch_device) {\n        // create a drawer which tracks touch movements\n        var drawer = {\n          isDrawing: false,\n          touchstart: function(coors) {\n            context.beginPath();\n            context.moveTo(coors.x, coors.y);\n            this.isDrawing = true;\n            self.linesDrawn.push([[coors.x, coors.y], [coors.x, coors.y]]);\n          },\n          touchmove: function(coors) {\n            if (this.isDrawing) {\n              context.lineTo(coors.x, coors.y);\n              context.stroke();\n              self.linesDrawn[self.linesDrawn.length - 1].push([\n                coors.x,\n                coors.y\n              ]);\n            }\n          },\n          touchend: function(coors) {\n            if (this.isDrawing) {\n              this.touchmove(coors);\n              this.isDrawing = false;\n            }\n          }\n        };\n\n        // create a function to pass touch events and coordinates to drawer\n        let draw = function(event) {\n          // get the touch coordinates.  Using the first touch in case of multi-touch\n          var coors = {\n            x: event.targetTouches[0].pageX,\n            y: event.targetTouches[0].pageY\n          };\n\n          // Now we need to get the offset of the canvas location\n          var obj = canvas;\n\n          if (obj.offsetParent) {\n            // Every time we find a new object, we add its offsetLeft and offsetTop to curleft and curtop.\n            do {\n              coors.x -= obj.offsetLeft;\n              coors.y -= obj.offsetTop;\n            } while (\n              // The while loop can be \"while (obj = obj.offsetParent)\" only, which does return null\n              // when null is passed back, but that creates a warning in some editors (i.e. VS2010).\n              (obj = obj.offsetParent) != null\n            );\n          }\n\n          // pass the coordinates to the appropriate handler\n          drawer[event.type](coors);\n        };\n\n        // attach the touchstart, touchmove, touchend event listeners.\n        canvas.addEventListener(\"touchstart\", draw, false);\n        canvas.addEventListener(\"touchmove\", draw, false);\n        canvas.addEventListener(\"touchend\", draw, false);\n\n        // prevent elastic scrolling\n        canvas.addEventListener(\n          \"touchmove\",\n          function(event) {\n            event.preventDefault();\n          },\n          false\n        );\n      } else {\n        // draws a line to the x and y coordinates of the mouse event inside\n        // the specified element using the specified context\n        let drawLine = mouseEvent => {\n          var position = this.getPosition(mouseEvent, canvas);\n\n          context.lineTo(position.X, position.Y);\n          context.stroke();\n          this.linesDrawn[this.linesDrawn.length - 1].push([\n            position.X,\n            position.Y\n          ]);\n        };\n\n        // draws a line from the last coordiantes in the path to the finishing\n        // coordinates and unbind any event handlers which need to be preceded\n        // by the mouse down event\n        let finishDrawing = function(mouseEvent) {\n          // draw the line to the finishing coordinates\n          drawLine(mouseEvent);\n\n          context.closePath();\n\n          // remove event handlers\n          canvas.removeEventListener(\"mousemove\", drawLine);\n          canvas.removeEventListener(\"mouseup\", finishDrawing);\n          canvas.removeEventListener(\"mouseout\", finishDrawing);\n        };\n\n        // start drawing when the mousedown event fires, and attach handlers to\n        // draw a line to wherever the mouse moves to\n        this.canvas.addEventListener(\"mousedown\", mouseEvent => {\n          var position = this.getPosition(mouseEvent, this.canvas);\n          context.moveTo(position.X, position.Y);\n          context.beginPath();\n          this.linesDrawn.push([[position.X, position.Y]]);\n\n          // attach event handlers\n          canvas.addEventListener(\"mousemove\", drawLine);\n          canvas.addEventListener(\"mouseup\", finishDrawing);\n          canvas.addEventListener(\"mouseout\", finishDrawing);\n        });\n      }\n    },\n\n    // Clear the canvas context using the canvas width and height\n    clearCanvas: function() {\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n  }\n};\n</script>\n<style scoped lang=\"scss\">\n.fullscreen {\n  position: fixed;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  top: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 3;\n  background-color: $bg-color;\n  canvas {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Draw.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Draw.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Draw.vue?vue&type=template&id=5f60653c&scoped=true&\"\nimport script from \"./Draw.vue?vue&type=script&lang=js&\"\nexport * from \"./Draw.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Draw.vue?vue&type=style&index=0&id=5f60653c&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5f60653c\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Draw.vue?vue&type=style&index=0&id=5f60653c&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Draw.vue?vue&type=style&index=0&id=5f60653c&scoped=true&lang=scss&\""],"sourceRoot":""}